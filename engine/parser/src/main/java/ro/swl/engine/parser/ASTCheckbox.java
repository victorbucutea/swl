/* Generated By:JJTree: Do not edit this line. ASTCheckbox.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false
 * ,
 * NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package ro.swl.engine.parser;

import ro.swl.engine.parser.model.Component;
import ro.swl.engine.writer.ui.TagWriter;
import ro.swl.engine.writer.ui.WriteException;

import static ro.swl.engine.parser.SWLConstants.CHECKBOX;
import static ro.swl.engine.parser.SWLConstants.tokenImage;


public class ASTCheckbox extends Component {

	/**
	 * value label is the wrapping label of a checkbox or a radio
	 * a plain label is a label of an input or selectbox
	 */
	private ASTLabel valueLabel;


	public ASTCheckbox(int id) {
		super(id);
		setImageWithoutQuote(tokenImage[CHECKBOX]);
		setRenderId(true);//id is needed for selecting this input when clicking on label
	}


	@Override
	public void render(TagWriter writer) throws WriteException {
		if (isRenderLabel()) {
			valueLabel = new ASTCheckboxLabel(getParentComponent(), this);
			valueLabel.addChild(this);
			setNoLabelRendering();
			valueLabel.render(writer);
		} else {
			super.render(writer);
		}
	}


	@Override
	protected String getComponentName() {
		return grammar.checkbox();
	}


	@Override
	public boolean hasExternalizableLabel() {
		return true;
	}


	@Override
	public void writeAttributes(TagWriter writer) throws WriteException {
		writer.append(grammar.checkboxType());
	}


	public Component getValueLabel() {
		return valueLabel;
	}

}
/*
 * JavaCC - OriginalChecksum=26ad9a61dc0f3ee28c3664e80a122b1a (do not edit this
 * line)
 */
