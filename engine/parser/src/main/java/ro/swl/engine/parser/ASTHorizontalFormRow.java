/*
 * Generated By:JJTree: Do not edit this line. ASTHorizontalFormRow.java Version
 * 4.3
 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false
 * ,
 * NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package ro.swl.engine.parser;

import ro.swl.engine.parser.model.Component;
import ro.swl.engine.writer.TagWriter;
import ro.swl.engine.writer.WriteException;



public class ASTHorizontalFormRow extends ASTLayoutRow {

	public ASTHorizontalFormRow(int id) {
		super(id);
		addClass(grammar.horizontalFormGroupClass());
	}


	@Override
	protected void renderContentBeforeChildren(TagWriter writer) throws WriteException {
		/*
		 * TODO - When in horizontal_form we need to render the 'for' attribute
		 * to point to the first input component
		 */
		//draw horizontal form label
		if (isRenderLabel()) {
			ASTLabel label = new ASTLabel(getParent(), this);
			label.addClass(grammar.horizontalFormLabelClass());
			label.setRenderInline(true);
			label.render(writer);
		}

		ASTLayoutRow row = new ASTLayoutRow(getParentComponent());
		row.setId(getId() + ".control");
		row.addClass(grammar.horizontalFormControlClass());
		ASTMvcArea area = getFirstChildNodeOfType(ASTMvcArea.class, false);
		row.addChild(area);
		row.render(writer);
	}


	@Override
	protected boolean renderContentBeforeChild(TagWriter writer, Component child) throws WriteException {
		// skip processing children they will be rendered in #renderContentBeforeChildren
		return false;
	}

}
/*
 * JavaCC - OriginalChecksum=e400e1413f9b76f76fdce5d56d64ee91 (do not edit this
 * line)
 */
