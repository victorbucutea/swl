/* Generated By:JJTree&JavaCC: Do not edit this line. SWLConstants.java */
package ro.swl.engine.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SWLConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int OPEN_BRACKET = 7;
  /** RegularExpression Id. */
  int CLOSE_BRACKET = 8;
  /** RegularExpression Id. */
  int OPEN_R_BRACKET = 9;
  /** RegularExpression Id. */
  int CLOSE_R_BRACKET = 10;
  /** RegularExpression Id. */
  int OPEN_S_BRACKET = 11;
  /** RegularExpression Id. */
  int CLOSE_S_BRACKET = 12;
  /** RegularExpression Id. */
  int ALPHA_CHAR = 13;
  /** RegularExpression Id. */
  int NUM_CHAR = 14;
  /** RegularExpression Id. */
  int ALPHANUM_CHAR = 15;
  /** RegularExpression Id. */
  int IDENTIFIER_CHAR = 16;
  /** RegularExpression Id. */
  int QUOTE = 17;
  /** RegularExpression Id. */
  int APP_NAME = 18;
  /** RegularExpression Id. */
  int MODULE = 19;
  /** RegularExpression Id. */
  int DOMAIN = 20;
  /** RegularExpression Id. */
  int LOGIC = 21;
  /** RegularExpression Id. */
  int SCREEN = 22;
  /** RegularExpression Id. */
  int UI = 23;
  /** RegularExpression Id. */
  int CONTROLLER = 24;
  /** RegularExpression Id. */
  int MODEL = 25;
  /** RegularExpression Id. */
  int IDENTIFIER = 26;
  /** RegularExpression Id. */
  int QUOTED_IDENTIFIER = 27;
  /** RegularExpression Id. */
  int QUOTED_TEXT = 28;
  /** RegularExpression Id. */
  int INPUT = 29;
  /** RegularExpression Id. */
  int INPUT_AREA = 30;
  /** RegularExpression Id. */
  int INPUT_FILE = 31;
  /** RegularExpression Id. */
  int CHECKBOX = 32;
  /** RegularExpression Id. */
  int SELECTBOX = 33;
  /** RegularExpression Id. */
  int SELECTOPTION = 34;
  /** RegularExpression Id. */
  int SELECTOPTIONGROUP = 35;
  /** RegularExpression Id. */
  int TEXT = 36;
  /** RegularExpression Id. */
  int LABEL = 37;
  /** RegularExpression Id. */
  int RADIO = 38;
  /** RegularExpression Id. */
  int RADIOS = 39;
  /** RegularExpression Id. */
  int BUTTON = 40;
  /** RegularExpression Id. */
  int BUTTONGROUP = 41;
  /** RegularExpression Id. */
  int IMG = 42;
  /** RegularExpression Id. */
  int VERTICAL_LAYOUT = 43;
  /** RegularExpression Id. */
  int HORIZONTAL_LAYOUT = 44;
  /** RegularExpression Id. */
  int HORIZONTAL_FORM = 45;
  /** RegularExpression Id. */
  int GROUP = 46;
  /** RegularExpression Id. */
  int SECTION = 47;
  /** RegularExpression Id. */
  int ROW = 48;
  /** RegularExpression Id. */
  int COLUMN = 49;
  /** RegularExpression Id. */
  int NO_LABEL_FLAG = 50;
  /** RegularExpression Id. */
  int NAME = 51;
  /** RegularExpression Id. */
  int ANY_NON_OPEN_CLOSE = 52;
  /** RegularExpression Id. */
  int NUMBER = 53;
  /** RegularExpression Id. */
  int VARIABLE = 54;
  /** RegularExpression Id. */
  int COMMA = 55;
  /** RegularExpression Id. */
  int DOT = 56;
  /** RegularExpression Id. */
  int LITERAL = 57;
  /** RegularExpression Id. */
  int DESC_QUOTE = 58;
  /** RegularExpression Id. */
  int STYLE_CLASS = 59;
  /** RegularExpression Id. */
  int COLON = 60;
  /** RegularExpression Id. */
  int SEMICOLON = 61;
  /** RegularExpression Id. */
  int ASTERISK = 62;
  /** RegularExpression Id. */
  int CLOSE_QUOTE = 63;
  /** RegularExpression Id. */
  int ANY_NO_SEMICOLON = 64;
  /** RegularExpression Id. */
  int ENUM = 65;
  /** RegularExpression Id. */
  int PRIMITIVE = 66;
  /** RegularExpression Id. */
  int COLLECTION = 67;
  /** RegularExpression Id. */
  int CLS_NAME = 68;
  /** RegularExpression Id. */
  int INDICATOR = 69;
  /** RegularExpression Id. */
  int SEPARATOR = 70;
  /** RegularExpression Id. */
  int MANY_MARKER = 71;
  /** RegularExpression Id. */
  int OPEN_ANGLE = 72;
  /** RegularExpression Id. */
  int CLOSE_ANGLE = 73;
  /** RegularExpression Id. */
  int CRUD = 74;
  /** RegularExpression Id. */
  int SEARCHER = 75;
  /** RegularExpression Id. */
  int SERVICE = 76;
  /** RegularExpression Id. */
  int S_DOT = 77;
  /** RegularExpression Id. */
  int S_NAME = 78;
  /** RegularExpression Id. */
  int S_QUOTED_TEXT = 79;

  /** Lexical state. */
  int LogicState = 0;
  /** Lexical state. */
  int DomainState = 1;
  /** Lexical state. */
  int CssStyleValueState = 2;
  /** Lexical state. */
  int CssStyleState = 3;
  /** Lexical state. */
  int InputDescriptionState = 4;
  /** Lexical state. */
  int JsContentState = 5;
  /** Lexical state. */
  int DEFAULT = 6;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<ALPHA_CHAR>",
    "<NUM_CHAR>",
    "<ALPHANUM_CHAR>",
    "<IDENTIFIER_CHAR>",
    "<QUOTE>",
    "\"name\"",
    "\"module\"",
    "\"domain\"",
    "\"logic\"",
    "\"screen\"",
    "\"ui\"",
    "\"controller\"",
    "\"model\"",
    "<IDENTIFIER>",
    "<QUOTED_IDENTIFIER>",
    "<QUOTED_TEXT>",
    "\"input\"",
    "\"input_area\"",
    "\"input_file\"",
    "\"checkbox\"",
    "\"selectbox\"",
    "\"selectoption\"",
    "\"selectoptiongroup\"",
    "\"text\"",
    "\"label\"",
    "\"radio\"",
    "\"radios\"",
    "\"button\"",
    "\"button_group\"",
    "\"img\"",
    "\"vertical_layout\"",
    "\"horizontal_layout\"",
    "\"horizontal_form\"",
    "\"group\"",
    "\"section\"",
    "\"row\"",
    "\"column\"",
    "\"#\"",
    "<NAME>",
    "<ANY_NON_OPEN_CLOSE>",
    "<NUMBER>",
    "<VARIABLE>",
    "\",\"",
    "\".\"",
    "<LITERAL>",
    "<DESC_QUOTE>",
    "<STYLE_CLASS>",
    "\":\"",
    "\";\"",
    "\"*\"",
    "<CLOSE_QUOTE>",
    "<ANY_NO_SEMICOLON>",
    "\"enum\"",
    "<PRIMITIVE>",
    "<COLLECTION>",
    "<CLS_NAME>",
    "\"->\"",
    "\",\"",
    "\"*\"",
    "\"<\"",
    "\">\"",
    "\"crud\"",
    "\"searcher\"",
    "\"service\"",
    "\".\"",
    "<S_NAME>",
    "<S_QUOTED_TEXT>",
  };

}
